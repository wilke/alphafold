# AlphaFold Docker Container
FROM nvidia/cuda:12.2.2-cudnn8-runtime-ubuntu20.04

# Set labels
LABEL Author="DeepMind Technologies Limited"
LABEL Version="alphafold-docker"
LABEL Description="AlphaFold protein structure prediction system"

# Set non-interactive frontend for apt
ENV DEBIAN_FRONTEND=noninteractive

# Update and install system packages
RUN apt-get update --quiet && \
    apt-get install --no-install-recommends --yes --quiet \
        build-essential \
        cmake \
        cuda-command-line-tools-12-2 \
        git \
        hmmer \
        kalign \
        tzdata \
        wget && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get autoremove --yes && \
    apt-get clean

# Compile HHsuite from source
RUN git clone --branch v3.3.0 --single-branch https://github.com/soedinglab/hh-suite.git /tmp/hh-suite && \
    mkdir /tmp/hh-suite/build && \
    cd /tmp/hh-suite/build && \
    cmake -DCMAKE_INSTALL_PREFIX=/opt/hhsuite .. && \
    make --jobs 4 && \
    make install && \
    ln -s /opt/hhsuite/bin/* /usr/bin && \
    cd / && \
    rm -rf /tmp/hh-suite

# Install Miniconda
RUN wget -q -P /tmp https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
    bash /tmp/Miniconda3-latest-Linux-x86_64.sh -b -p /opt/conda && \
    rm /tmp/Miniconda3-latest-Linux-x86_64.sh

# Set up conda paths
ENV PATH="/opt/conda/bin:$PATH"
ENV LD_LIBRARY_PATH="/opt/conda/lib:$LD_LIBRARY_PATH"

# Install Conda packages
RUN /opt/conda/bin/conda install --quiet --yes conda==24.11.1 pip python=3.11 && \
    /opt/conda/bin/conda install --quiet --yes --channel nvidia cuda-toolkit=12.2.2 cuda-runtime=12.2.2 && \
    /opt/conda/bin/conda install --quiet --yes --channel conda-forge openmm=8.0.0 pdbfixer && \
    /opt/conda/bin/conda clean --all --force-pkgs-dirs --yes

# Create app directory
RUN mkdir -p /app/alphafold

# Download stereo_chemical_props.txt
RUN wget -q -P /app/alphafold/alphafold/common/ \
    https://git.scicore.unibas.ch/schwede/openstructure/-/raw/7102c63615b64735c4941278d92b554ec94415f8/modules/mol/alg/src/stereo_chemical_props.txt

# Add SETUID bit to ldconfig
RUN chmod u+s /sbin/ldconfig.real

# Create symbolic link for libffi
RUN ln -sf /usr/lib/x86_64-linux-gnu/libffi.so.7 /opt/conda/lib/libffi.so.7

# Copy the entire alphafold directory into the container
COPY . /app/alphafold

# Set working directory
WORKDIR /app/alphafold

# Install pip packages after files are copied
RUN /opt/conda/bin/pip3 install --upgrade pip --no-cache-dir && \
    /opt/conda/bin/pip3 install -r /app/alphafold/requirements.txt --no-cache-dir && \
    /opt/conda/bin/pip3 install --upgrade --no-cache-dir \
        jax==0.4.23 \
        jaxlib==0.4.23+cuda12.cudnn89 \
        -f https://storage.googleapis.com/jax-releases/jax_cuda_releases.html

# Set environment variables
ENV PATH="/opt/conda/bin:/opt/hhsuite/bin:$PATH"
ENV LD_LIBRARY_PATH="/opt/conda/lib:$LD_LIBRARY_PATH"
ENV PYTHONPATH="/app/alphafold:$PYTHONPATH"
# CUDA compatibility settings
ENV CUDA_FORCE_PTX_JIT=1
ENV XLA_FLAGS="--xla_gpu_force_compilation_parallelism=1"

# Create run script
RUN echo '#!/bin/bash\nldconfig\npython /app/alphafold/run_alphafold.py "$@"' > /app/run_alphafold.sh && \
    chmod +x /app/run_alphafold.sh

# Set the default command
ENTRYPOINT ["/app/run_alphafold.sh"]
